{"input":{"ourVersion":"1.42.0-insider","commit":"7c0095ee2d064033fc13184127a9adc603454729","locale":"en","devMode":false,"absoluteFolderPath":"/home/user/.vscode-insiders/extensions","isBuiltin":false,"isUnderDevelopment":false,"tanslations":{},"mtime":1584231793431},"result":[{"name":"code-gnu-global","displayName":"C++ Intellisense","description":"C/C++ Intellisense with the help of GNU Global tags","icon":"logo.svg","version":"0.2.2","publisher":"austin","engines":{"vscode":"^0.10.1"},"categories":["Other","Languages"],"activationEvents":["onLanguage:cpp","onLanguage:c"],"configuration":{"type":"object","title":"C++ Intellisense configuration","properties":{"codegnuglobal.encoding":{"type":"string","default":"","description":"Specify the encoding of the command line output. (Normally it is the code page of Windows non-unicode program if it is not CP437)"},"codegnuglobal.executable":{"type":"string","default":"global","description":"Specify the path to the global executable. (If it is not in PATH already)"},"codegnuglobal.autoupdate":{"type":"boolean","default":true,"description":"Specify if global should automatically update the tags on file save. (You should turn it off in the workspace settings for large projects)"}}},"main":"./out/src/extension","contributes":{},"scripts":{"vscode:prepublish":"node ./node_modules/vscode/bin/compile","compile":"node ./node_modules/vscode/bin/compile -watch -p ./"},"devDependencies":{"typescript":"^1.6.2","vscode":"0.10.x"},"dependencies":{"child-process-promise":"^1.1.0","iconv-lite":"^0.4.13"},"repository":{"type":"git","url":"https://github.com/austin-----/code-gnu-global"},"uuid":"de611071-4d05-4903-821c-6878df63d4af","isBuiltin":false,"isUnderDevelopment":false,"id":"austin.code-gnu-global","identifier":{"value":"austin.code-gnu-global","_lower":"austin.code-gnu-global"},"extensionLocation":{"$mid":1,"fsPath":"/home/user/.vscode-insiders/extensions/austin.code-gnu-global-0.2.2","path":"/home/user/.vscode-insiders/extensions/austin.code-gnu-global-0.2.2","scheme":"file"}},{"name":"wal-theme","displayName":"Wal Theme","description":"A theme generated with pywal color palette","publisher":"dlasagno","author":"Daniele Lasagno","license":"MIT","version":"1.0.3","repository":{"type":"git","url":"https://github.com/dlasagno/vscode-wal-theme"},"bugs":{"url":"https://github.com/dlasagno/vscode-wal-theme/issues"},"homepage":"https://github.com/dlasagno/vscode-wal-theme#readme","engines":{"vscode":"^1.34.0"},"categories":["Themes"],"keywords":["theme","pywal","wal"],"icon":"icon.png","activationEvents":["*","onCommand:walTheme.update"],"main":"./out/extension.js","contributes":{"commands":[{"command":"walTheme.update","title":"Update","category":"Wal Theme"}],"configuration":{"title":"Wal Theme","properties":{"walTheme.autoUpdate":{"type":"boolean","default":true,"description":"Update automatically the theme when the pywal color palette changes"}}},"themes":[{"label":"Wal","uiTheme":"vs-dark","path":"./themes/wal.json","_watch":true},{"label":"Wal Bordered","uiTheme":"vs-dark","path":"./themes/wal-bordered.json","_watch":true}]},"scripts":{"vscode:prepublish":"npm run compile","compile":"tsc -p ./","watch":"tsc -watch -p ./","pretest":"npm run compile"},"devDependencies":{"@types/glob":"^7.1.1","@types/node":"^10.12.21","@types/vscode":"^1.34.0","glob":"^7.1.4","typescript":"^3.3.1","tslint":"^5.12.1"},"dependencies":{"@types/color":"^3.0.0","color":"^3.1.2"},"uuid":"b3ad903e-4a01-4f89-8ab2-e4851adde555","isBuiltin":false,"isUnderDevelopment":false,"id":"dlasagno.wal-theme","identifier":{"value":"dlasagno.wal-theme","_lower":"dlasagno.wal-theme"},"extensionLocation":{"$mid":1,"fsPath":"/home/user/.vscode-insiders/extensions/dlasagno.wal-theme-1.0.3","path":"/home/user/.vscode-insiders/extensions/dlasagno.wal-theme-1.0.3","scheme":"file"}},{"name":"language-haskell","displayName":"Haskell Syntax Highlighting","description":"Syntax support for the Haskell programming language.","version":"2.7.0","publisher":"justusadam","engines":{"vscode":"^1.0.0"},"icon":"images/logo.png","galleryBanner":{"color":"#293845","theme":"dark"},"keywords":["language","haskell","highlight","syntax"],"license":"BSD-3-Clause","homepage":"https://github.com/JustusAdam/language-haskell","repository":{"type":"git","url":"https://github.com/JustusAdam/language-haskell.git"},"bugs":{"url":"https://github.com/JustusAdam/language-haskell/issues","email":"dev@justus.science"},"categories":["Programming Languages"],"activationEvents":["onLanguage:haskell"],"main":"./out/src/extension","contributes":{"configuration":{"type":"object","title":"Haskell configuration","properties":{"haskell.indentationRules.enabled":{"type":"boolean","default":true,"description":"Set to 'false' to disable automatically increasing indent on newlines after '=', 'do', 'where' etc."}}},"languages":[{"id":"haskell","aliases":["Haskell","haskell"],"extensions":[".hsig",".hs"],"configuration":"./haskell-configuration.json"},{"id":"cabal","aliases":["Cabal","cabal"],"extensions":[".cabal"],"configuration":"./cabal-configuration.json"},{"id":"literate haskell","aliases":["Literate Haskell","literate Haskell"],"extensions":[".lhs"],"configuration":"./haskell-configuration.json"},{"id":"yaml","aliases":["YAML","yaml"],"filenames":["stack.yaml.lock"]}],"grammars":[{"language":"haskell","scopeName":"source.haskell","path":"./syntaxes/haskell.tmLanguage"},{"language":"cabal","scopeName":"source.cabal","path":"./syntaxes/cabal.tmLanguage"},{"language":"literate haskell","scopeName":"text.tex.latex.haskell","path":"./syntaxes/literateHaskell.tmLanguage"},{"scopeName":"markdown.haskell.codeblock","path":"./syntaxes/codeblock-haskell.json","injectTo":["text.html.markdown"],"embeddedLanguages":{"meta.embedded.block.haskell":"haskell"}},{"scopeName":"markdown.lhaskell.codeblock","path":"./syntaxes/codeblock-literate-haskell.json","injectTo":["text.html.markdown"],"embeddedLanguages":{"meta.embedded.block.lhaskell":"lhaskell"}},{"scopeName":"markdown.cabal.codeblock","path":"./syntaxes/codeblock-cabal.json","injectTo":["text.html.markdown"],"embeddedLanguages":{"meta.embedded.block.cabal":"cabal"}}]},"scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install"},"devDependencies":{"typescript":"^2.6.2","vscode":"^1.0.0"},"uuid":"270c1d3b-a657-446f-83b8-ab32fd7af006","isBuiltin":false,"isUnderDevelopment":false,"id":"justusadam.language-haskell","identifier":{"value":"justusadam.language-haskell","_lower":"justusadam.language-haskell"},"extensionLocation":{"$mid":1,"fsPath":"/home/user/.vscode-insiders/extensions/justusadam.language-haskell-2.7.0","path":"/home/user/.vscode-insiders/extensions/justusadam.language-haskell-2.7.0","scheme":"file"}},{"name":"remote-ssh","displayName":"Remote - SSH","description":"Open any folder on a remote machine using SSH and take advantage of VS Code's full feature set.","version":"0.49.0","preview":true,"publisher":"ms-vscode-remote","icon":"resources/remote-ssh.png","repository":{"type":"git","url":"https://github.com/Microsoft/vscode-remote-release.git"},"bugs":{"url":"https://github.com/Microsoft/vscode-remote-release/issues"},"license":"SEE LICENSE IN LICENSE.txt","engines":{"vscode":"^1.42.0"},"extensionKind":["ui"],"extensionPack":["ms-vscode-remote.remote-ssh-edit"],"categories":["Other"],"keywords":["remote development","remote","ssh"],"activationEvents":["onCommand:opensshremotes.openEmptyWindow","onCommand:opensshremotes.openEmptyWindowInCurrentWindow","onCommand:opensshremotes.openConfigFile","onCommand:opensshremotes.cleanDevBox","onCommand:opensshremotes.cleanRemoteServer","onCommand:opensshremotes.cleanLocalServer","onCommand:opensshremotes.getHelp","onCommand:opensshremotes.getStarted","onCommand:opensshremotes.reportIssue","onCommand:opensshremotes.settings","onCommand:opensshremotes.provideFeedback","onCommand:opensshremotes.showLog","onCommand:opensshremotes.addNewSshHost","onResolveRemoteAuthority:ssh-remote","onView:sshHosts"],"main":"./out/extension","enableProposedApi":true,"aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","contributes":{"configuration":{"title":"Remote - SSH","properties":{"remote.SSH.configFile":{"type":"string","description":"The absolute file path to a custom SSH config file.","default":"","scope":"application"},"remote.SSH.showLoginTerminal":{"type":"boolean","description":"Always reveal the SSH login terminal.","default":false},"remote.SSH.defaultForwardedPorts":{"type":"array","items":{"type":"object","required":["remotePort"],"properties":{"name":{"type":"string"},"remotePort":{"type":"number"},"localPort":{"type":"number"}}},"description":"A list of ports to forward when the connection is established.","default":[]},"remote.SSH.defaultExtensions":{"type":"array","items":{"type":"string"},"description":"List of extensions that should be installed automatically on all SSH hosts."},"remote.SSH.path":{"type":"string","description":"An absolute path to the SSH executable. When empty, it will use \"ssh\" on the path or in common install locations.","default":"","scope":"application"},"remote.SSH.lockfilesInTmp":{"type":"boolean","markdownDescription":"Whether to keep lockfiles in `/tmp` instead of in the server's install folder. Useful for connecting to hosts which have issues with locking, such as hosts with a home directory using NFS or another distributed filesystem.","default":false},"remote.SSH.enableDynamicForwarding":{"type":"boolean","description":"Whether to use SSH dynamic forwarding to allow setting up new port tunnels over an existing SSH connection. When this is used, a password only needs to be entered once for each remote window.","default":true},"remote.SSH.enableAgentForwarding":{"type":"boolean","markdownDescription":"Enable SSH agent forwarding via the SSH config option `ForwardAgent`.","default":true},"remote.SSH.allowLocalServerDownload":{"type":"boolean","description":"If downloading the VS Code Server fails on the host, fall back to downloading on the client and transferring it to the host with scp.","default":true},"remote.SSH.enableAzureIntegration":{"type":"boolean","markdownDescription":"**Experimental**: Detect SSH connections that target Azure VMs in the SSH hosts explorer. Requires that you are logged in using the `Azure Account` extension.","default":false},"remote.SSH.windowsRemotes":{"type":"array","markdownDescription":"**Experimental**: Enables experimental support for connecting to Windows remotes. Add the names of windows remotes to this list.","default":[],"items":{"type":"string"}},"remote.SSH.useLocalServer":{"type":"boolean","markdownDescription":"**Experimental**: Enables a mode for connecting using a single connection shared between windows and across window reloads. This makes it faster to open new windows and reduces the number of times a password needs to be entered.","default":false},"remote.SSH.connectTimeout":{"type":"number","description":"Specifies the timeout in seconds used for the SSH command that connects to the remote.","default":15,"minimum":1},"remote.SSH.logLevel":{"type":"string","description":"The log level for the extension.","default":"info","scope":"application","enum":["info","trace"]}}},"views":{"remote":[{"id":"sshHosts","name":"SSH Targets","group":"targets@1","remoteName":"ssh-remote"}]},"commands":[{"command":"opensshremotes.openWebUI","title":"Open Web UI","category":"Remote-SSH"},{"command":"opensshremotes.openEmptyWindow","title":"Connect to Host...","category":"Remote-SSH"},{"command":"opensshremotes.openEmptyWindowOnCurrentHost","title":"New Window on Active Host","category":"Remote-SSH"},{"command":"opensshremotes.openEmptyWindowInCurrentWindow","title":"Connect Current Window to Host...","category":"Remote-SSH"},{"command":"opensshremotes.openConfigFile","title":"Open Configuration File...","category":"Remote-SSH"},{"command":"opensshremotes.addNewSshHost","title":"Add New SSH Host...","category":"Remote-SSH"},{"command":"opensshremotes.cleanDevBox","title":"Uninstall VS Code Server from Host...","category":"Remote-SSH"},{"command":"opensshremotes.cleanRemoteServer","title":"Kill VS Code Server on Host...","category":"Remote-SSH"},{"command":"opensshremotes.cleanLocalServer","title":"Kill Local Connection Server For Host...","category":"Remote-SSH"},{"command":"opensshremotes.getHelp","title":"Help","category":"Remote-SSH"},{"command":"opensshremotes.getStarted","title":"Getting Started","category":"Remote-SSH"},{"command":"opensshremotes.reportIssue","title":"Report Issue...","category":"Remote-SSH"},{"command":"opensshremotes.settings","title":"Settings","category":"Remote-SSH"},{"command":"opensshremotes.provideFeedback","title":"Provide Feedback","category":"Remote-SSH"},{"command":"opensshremotes.showLog","title":"Show Log","category":"Remote-SSH"},{"command":"opensshremotesexplorer.emptyWindowInNewWindow","title":"Connect to Host in New Window","icon":{"light":"resources/light/empty-window.svg","dark":"resources/dark/empty-window.svg","highContrast":"resources/highContrast/empty-window.svg"}},{"command":"opensshremotesexplorer.emptyWindowInCurrentWindow","title":"Connect to Host in Current Window"},{"command":"opensshremotesexplorer.startManagedHost","title":"Start VM","icon":{"light":"resources/light/vm-start.svg","dark":"resources/dark/vm-start.svg","highContrast":"resources/highContrast/vm-start.svg"}},{"command":"opensshremotesexplorer.stopManagedHost","title":"Stop VM","icon":{"light":"resources/light/vm-stop.svg","dark":"resources/dark/vm-stop.svg","highContrast":"resources/highContrast/vm-stop.svg"}},{"command":"opensshremotesexplorer.reopenFolderInCurrentWindow","title":"Open on SSH Host in Current Window"},{"command":"opensshremotesexplorer.reopenFolderInNewWindow","title":"Open on SSH Host in New Window","icon":{"light":"resources/light/reopen-folder.svg","dark":"resources/dark/reopen-folder.svg","highContrast":"resources/highContrast/reopen-folder.svg"}},{"command":"opensshremotesexplorer.deleteFolderHistoryItem","title":"Remove From Recent List","icon":{"light":"resources/light/remove.svg","dark":"resources/dark/remove.svg"}},{"command":"opensshremotesexplorer.refresh","title":"Refresh","icon":{"light":"resources/light/refresh.svg","dark":"resources/dark/refresh.svg"}},{"command":"opensshremotesexplorer.configure","title":"Configure","icon":{"light":"resources/light/configure.svg","dark":"resources/dark/configure.svg"}},{"command":"opensshremotesexplorer.add","title":"Add New","icon":{"light":"resources/light/plus.svg","dark":"resources/dark/plus.svg"}}],"resourceLabelFormatters":[{"scheme":"vscode-remote","authority":"ssh-remote+*","formatting":{"label":"${path}","separator":"/","tildify":true,"workspaceSuffix":"SSH"}}],"menus":{"statusBar/windowIndicator":[{"command":"opensshremotes.openEmptyWindow","when":"remoteName =~ /^ssh-remote$/ && remoteConnectionState == connected","group":"1_remote_ssh_general@1"},{"command":"opensshremotes.openConfigFile","when":"remoteName =~ /^ssh-remote$/ && remoteConnectionState == connected","group":"1_remote_ssh_general@2"},{"command":"opensshremotes.showLog","when":"remoteName =~ /^ssh-remote$/ && remoteConnectionState == connected","group":"1_remote_ssh_general@5"},{"command":"opensshremotes.settings","when":"remoteName =~ /^ssh-remote$/ && remoteConnectionState == connected","group":"9_remote_ssh_help@1"},{"command":"opensshremotes.reportIssue","when":"remoteName =~ /^ssh-remote$/ && remoteConnectionState == connected","group":"9_remote_ssh_help@2"},{"command":"opensshremotes.provideFeedback","when":"remoteName =~ /^ssh-remote$/ && remoteConnectionState == connected","group":"9_remote_ssh_help@3"},{"command":"opensshremotes.getHelp","when":"remoteName =~ /^ssh-remote$/ && remoteConnectionState == connected","group":"9_remote_ssh_help@4"},{"command":"opensshremotes.openEmptyWindow","when":"remoteConnectionState == disconnected","group":"1_local_ssh@1"},{"command":"opensshremotes.openConfigFile","when":"remoteConnectionState == disconnected","group":"1_local_ssh@2"},{"command":"opensshremotes.getStarted","when":"remoteConnectionState == disconnected","group":"1_local_ssh@3"},{"command":"opensshremotes.openEmptyWindow","when":"!remoteName","group":"1_local_ssh@1"},{"command":"opensshremotes.openConfigFile","when":"!remoteName","group":"1_local_ssh@2"},{"command":"opensshremotes.getStarted","when":"!remoteName","group":"1_local_ssh@3"}],"commandPalette":[{"command":"opensshremotes.getStarted","when":"false"},{"command":"opensshremotes.openEmptyWindowOnCurrentHost","when":"remoteName =~ /^ssh-remote$/ && remoteConnectionState == connected"},{"command":"opensshremotes.provideFeedback","when":"remoteName =~ /^ssh-remote$/"},{"command":"opensshremotes.cleanLocalServer","when":"config.remote.SSH.useLocalServer"},{"command":"opensshremotesexplorer.emptyWindowInCurrentWindow","when":"false"},{"command":"opensshremotesexplorer.emptyWindowInNewWindow","when":"false"},{"command":"opensshremotesexplorer.startManagedHost","when":"false"},{"command":"opensshremotesexplorer.stopManagedHost","when":"false"},{"command":"opensshremotesexplorer.refresh","when":"false"},{"command":"opensshremotesexplorer.configure","when":"false"},{"command":"opensshremotesexplorer.add","when":"false"},{"command":"opensshremotesexplorer.reopenFolderInCurrentWindow","when":"false"},{"command":"opensshremotesexplorer.reopenFolderInNewWindow","when":"false"},{"command":"opensshremotesexplorer.deleteFolderHistoryItem","when":"false"},{"command":"opensshremotes.openWebUI","when":"remoteName =~ /^ssh-remote$/ && remoteConnectionState == connected && config.remote.SSH.enableWebAccess"}],"view/title":[{"command":"opensshremotesexplorer.add","when":"view == sshHosts","group":"navigation"},{"command":"opensshremotesexplorer.configure","when":"view == sshHosts","group":"navigation"},{"command":"opensshremotesexplorer.refresh","when":"view == sshHosts","group":"navigation"}],"view/item/context":[{"command":"opensshremotesexplorer.emptyWindowInNewWindow","when":"viewItem =~ /^opensshremotesexplorer.host(.managed.running)?$/","group":"inline@1"},{"command":"opensshremotesexplorer.emptyWindowInNewWindow","when":"viewItem =~ /^opensshremotesexplorer.host(.managed.running)?$/","group":"navigation@2"},{"command":"opensshremotesexplorer.emptyWindowInCurrentWindow","when":"viewItem =~ /^opensshremotesexplorer.host(.managed.running)?$/","group":"navigation@1"},{"command":"opensshremotesexplorer.startManagedHost","when":"viewItem == opensshremotesexplorer.host.managed.deallocated","group":"navigation@1"},{"command":"opensshremotesexplorer.startManagedHost","when":"viewItem == opensshremotesexplorer.host.managed.deallocated","group":"inline@1"},{"command":"opensshremotesexplorer.stopManagedHost","when":"viewItem == opensshremotesexplorer.host.managed.running","group":"navigation@3"},{"command":"opensshremotesexplorer.reopenFolderInNewWindow","when":"viewItem == opensshremotesexplorer.folder.reachable","group":"inline@1"},{"command":"opensshremotesexplorer.reopenFolderInNewWindow","when":"viewItem == opensshremotesexplorer.folder.reachable","group":"navigation@2"},{"command":"opensshremotesexplorer.reopenFolderInCurrentWindow","when":"viewItem == opensshremotesexplorer.folder.reachable","group":"navigation@1"},{"command":"opensshremotesexplorer.deleteFolderHistoryItem","when":"viewItem =~ /^opensshremotesexplorer.folder/","group":"navigation@3"},{"command":"opensshremotesexplorer.deleteFolderHistoryItem","when":"viewItem =~ /^opensshremotesexplorer.folder/","group":"inline@2"}]},"remoteHelp":{"getStarted":"https://aka.ms/vscode-remote/ssh/getting-started","feedback":"https://aka.ms/vscode-remote/ssh/provide-feedback","documentation":"https://aka.ms/vscode-remote/ssh","issues":"https://aka.ms/vscode-remote/ssh/issues","remoteName":"ssh-remote"}},"scripts":{"postinstall":"npm run downloadapi","downloadapi":"npx vscode-dts master","postdownloadapi":"npx vscode-dts dev","vscode:prepublish":"webpack --mode production","compile":"webpack --mode none","watch":"webpack --mode none --watch","watch2":"tsc -w -p .","package":"vsce package --yarn","lint":"tslint -p .","pretest":"tsc -p . --outDir out-test","test":"node ./out-test/test/runTests.js"},"devDependencies":{"@types/glob":"^7.1.1","@types/lockfile":"^1.0.1","@types/minimist":"^1.2.0","@types/mocha":"^5.2.6","@types/node":"^10.12.26","@types/shell-quote":"^1.6.1","@types/sinon":"^7.0.11","@types/webpack":"^4.4.27","azure-arm-resource":"^2.0.0-preview","azure-arm-website":"^1.0.0-preview","copy-webpack-plugin":"^5.0.2","glob":"^7.1.4","mocha":"^6.2.0","sinon":"^7.3.1","ts-loader":"^5.3.3","tslint":"^5.15.0","tslint-webpack-plugin":"^2.0.4","typescript":"^3.7.3","vsce":"^1.59.0","vscode-nls-dev":"^3.2.6","vscode-test":"^1.2.0","webpack":"^4.29.6","webpack-cli":"^3.3.0"},"dependencies":{"azure-arm-compute":"^9.1.0","azure-arm-network":"^12.0.0","lockfile":"^1.0.4","minimist":"^1.2.0","posix-getopt":"^1.2.0","shell-quote":"^1.7.1","socks":"^2.3.2","ssh-config":"^4.0.0","vscode-extension-telemetry":"^0.1.1"},"uuid":"607fd052-be03-4363-b657-2bd62b83d28a","isBuiltin":false,"isUnderDevelopment":false,"id":"ms-vscode-remote.remote-ssh","identifier":{"value":"ms-vscode-remote.remote-ssh","_lower":"ms-vscode-remote.remote-ssh"},"extensionLocation":{"$mid":1,"fsPath":"/home/user/.vscode-insiders/extensions/ms-vscode-remote.remote-ssh-0.49.0","path":"/home/user/.vscode-insiders/extensions/ms-vscode-remote.remote-ssh-0.49.0","scheme":"file"}},{"name":"remote-ssh-edit","displayName":"Remote - SSH: Editing Configuration Files","description":"Edit SSH configuration files","version":"0.50.0","preview":true,"publisher":"ms-vscode-remote","icon":"resources/remote-ssh.png","repository":{"type":"git","url":"https://github.com/Microsoft/vscode-remote-release.git"},"bugs":{"url":"https://github.com/Microsoft/vscode-remote-release/issues"},"license":"SEE LICENSE IN LICENSE.txt","engines":{"vscode":"^1.38.0"},"extensionKind":["ui"],"categories":["Programming Languages","Snippets"],"keywords":["remote development","remote","ssh"],"activationEvents":["onLanguage:ssh_config"],"main":"./out/extension","contributes":{"languages":[{"id":"ssh_config","aliases":["SSH Config","ssh_config"],"filenamePatterns":["**/.ssh/config","/etc/ssh/ssh_config"],"filenames":["ssh.config"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"ssh_config","scopeName":"source.config.ssh","path":"./syntaxes/ssh_config.tmLanguage.json"}]},"scripts":{"vscode:prepublish":"webpack --mode production","compile":"webpack --mode none","watch":"webpack --mode none --watch","package":"vsce package --yarn","lint":"tslint -p ."},"devDependencies":{"@types/node":"^10.12.26","@types/webpack":"^4.4.27","copy-webpack-plugin":"^5.0.2","ts-loader":"^5.3.3","tslint":"^5.15.0","tslint-webpack-plugin":"^2.0.4","typescript":"^3.4.2","vsce":"^1.59.0","vscode":"^1.1.33","vscode-nls-dev":"^3.2.6","webpack":"^4.29.6","webpack-cli":"^3.3.0"},"uuid":"bfeaf631-bcff-4908-93ed-fda4ef9a0c5c","isBuiltin":false,"isUnderDevelopment":false,"id":"ms-vscode-remote.remote-ssh-edit","identifier":{"value":"ms-vscode-remote.remote-ssh-edit","_lower":"ms-vscode-remote.remote-ssh-edit"},"extensionLocation":{"$mid":1,"fsPath":"/home/user/.vscode-insiders/extensions/ms-vscode-remote.remote-ssh-edit-0.50.0","path":"/home/user/.vscode-insiders/extensions/ms-vscode-remote.remote-ssh-edit-0.50.0","scheme":"file"}},{"name":"cpptools","displayName":"C/C++","description":"C/C++ IntelliSense, debugging, and code browsing.","version":"0.26.3","publisher":"ms-vscode","preview":true,"icon":"LanguageCCPP_color_128x.png","readme":"README.md","author":{"name":"Microsoft Corporation"},"license":"SEE LICENSE IN LICENSE.txt","engines":{"vscode":"^1.30.0"},"bugs":{"url":"https://github.com/Microsoft/vscode-cpptools/issues","email":"c_cpp_support@microsoft.com"},"repository":{"type":"git","url":"https://github.com/Microsoft/vscode-cpptools.git"},"homepage":"https://github.com/Microsoft/vscode-cpptools","qna":"https://github.com/Microsoft/vscode-cpptools/issues","keywords":["C","C++","IntelliSense","Microsoft","multi-root ready"],"categories":["Programming Languages","Debuggers","Formatters","Linters","Snippets"],"activationEvents":["onLanguage:cpp","onLanguage:c","onCommand:extension.pickNativeProcess","onCommand:extension.pickRemoteNativeProcess","onCommand:C_Cpp.BuildAndDebugActiveFile","onCommand:C_Cpp.ConfigurationEditJSON","onCommand:C_Cpp.ConfigurationEditUI","onCommand:C_Cpp.ConfigurationSelect","onCommand:C_Cpp.ConfigurationProviderSelect","onCommand:C_Cpp.SwitchHeaderSource","onCommand:C_Cpp.EnableErrorSquiggles","onCommand:C_Cpp.DisableErrorSquiggles","onCommand:C_Cpp.ToggleIncludeFallback","onCommand:C_Cpp.ToggleDimInactiveRegions","onCommand:C_Cpp.ResetDatabase","onCommand:C_Cpp.TakeSurvey","onCommand:C_Cpp.LogDiagnostics","onCommand:C_Cpp.RescanWorkspace","onCommand:C_Cpp.VcpkgClipboardInstallSuggested","onCommand:C_Cpp.VcpkgClipboardOnlineHelpSuggested","onDebug","workspaceContains:/.vscode/c_cpp_properties.json"],"main":"./dist/main","contributes":{"viewsContainers":{"activitybar":[{"id":"CppRenameActivityBar","title":"C/C++ Rename","icon":"assets/cpp-rename-icon.svg"}]},"views":{"references-view":[{"id":"CppReferencesView","name":"C/C++: Other references results","when":"cppReferenceTypes:hasResults && reference-list.hasResult"}],"CppRenameActivityBar":[{"id":"CppRenamePendingView","name":"PENDING RENAME","when":"cppRename:hasResults"},{"id":"CppRenameCandidatesView","name":"CANDIDATES FOR RENAME","when":"cppRename:hasResults"}]},"problemMatchers":[{"name":"gcc","source":"gcc","owner":"cpptools","fileLocation":["relative","${workspaceFolder}"],"pattern":{"regexp":"^(.*):(\\d+):(\\d+):\\s+(?:fatal\\s+)?(warning|error):\\s+(.*)$","file":1,"line":2,"column":3,"severity":4,"message":5}}],"configuration":{"type":"object","title":"C/C++","properties":{"C_Cpp.clang_format_path":{"type":["string","null"],"default":null,"description":"The full path of the clang-format executable. If not specified, and clang-format is available in the environment path, that is used.  If not found in the environment path, a copy of clang-format bundled with the extension will be used.","scope":"resource"},"C_Cpp.clang_format_style":{"type":"string","default":"file","description":"Coding style, currently supports: Visual Studio, LLVM, Google, Chromium, Mozilla, WebKit. Use \"file\" to load the style from a .clang-format file in the current or parent directory. Use {key: value, ...} to set specific parameters. For example, the \"Visual Studio\" style is similar to: { BasedOnStyle: LLVM, UseTab: Never, IndentWidth: 4, TabWidth: 4, BreakBeforeBraces: Allman, AllowShortIfStatementsOnASingleLine: false, IndentCaseLabels: false, ColumnLimit: 0, AccessModifierOffset: -4 }","scope":"resource"},"C_Cpp.clang_format_fallbackStyle":{"type":"string","default":"Visual Studio","description":"Name of the predefined style used as a fallback in case clang-format is invoked with style \"file\" but the .clang-format file is not found. Possible values are Visual Studio, LLVM, Google, Chromium, Mozilla, WebKit, none, or use {key: value, ...} to set specific parameters. For example, the \"Visual Studio\" style is similar to: { BasedOnStyle: LLVM, UseTab: Never, IndentWidth: 4, TabWidth: 4, BreakBeforeBraces: Allman, AllowShortIfStatementsOnASingleLine: false, IndentCaseLabels: false, ColumnLimit: 0, AccessModifierOffset: -4 }","scope":"resource"},"C_Cpp.clang_format_sortIncludes":{"type":["boolean","null"],"enum":[true,false,null],"default":null,"description":"If set, overrides the include sorting behavior determined by the SortIncludes parameter.","scope":"resource"},"C_Cpp.intelliSenseEngine":{"type":"string","enum":["Default","Tag Parser","Disabled"],"default":"Default","description":"Controls the IntelliSense provider. \"Tag Parser\" provides \"fuzzy\" results that are not context-aware. \"Default\" provides context-aware results. \"Disabled\" turns off C/C++ language service features.","scope":"resource"},"C_Cpp.intelliSenseEngineFallback":{"type":"string","enum":["Enabled","Disabled"],"default":"Disabled","description":"Controls whether the IntelliSense engine will automatically switch to the Tag Parser for translation units containing #include errors.","scope":"resource"},"C_Cpp.autocomplete":{"type":"string","enum":["Default","Disabled"],"default":"Default","description":"Controls the auto-completion provider. \"Default\" uses the active IntelliSense engine. \"Disabled\" uses the word-based completion provided by Visual Studio Code.","scope":"resource"},"C_Cpp.errorSquiggles":{"type":"string","enum":["Enabled","Disabled","EnabledIfIncludesResolve"],"default":"EnabledIfIncludesResolve","description":"Controls whether suspected compile errors detected by the IntelliSense engine will be reported back to the editor. This setting is ignored by the Tag Parser engine.","scope":"resource"},"C_Cpp.dimInactiveRegions":{"type":"boolean","default":true,"description":"Controls whether inactive preprocessor blocks are colored differently than active code. This setting has no effect if IntelliSense is disabled or if using the Default High Contrast theme.","scope":"resource"},"C_Cpp.inactiveRegionOpacity":{"type:":"number","default":0.55,"description":"Controls the opacity of inactive preprocessor blocks. Scales between 0.1 and 1.0. This setting only applies when inactive region dimming is enabled.","scope":"resource","minimum":0.1,"maximum":1},"C_Cpp.inactiveRegionForegroundColor":{"type":["string","null"],"default":null,"description":"Controls the font coloring of inactive preprocessor blocks. Input is in the form a hexadecimal color code or a valid Theme Color. If not set, this defaults to the syntax coloring scheme of the editor. This setting only applies when inactive region dimming is enabled.","scope":"resource"},"C_Cpp.inactiveRegionBackgroundColor":{"type":["string","null"],"default":null,"description":"Controls the background coloring of inactive preprocessor blocks. Input is in the form a hexadecimal color code or a valid Theme Color. If not set, this defaults to transparent. This setting only applies when inactive region dimming is enabled.","scope":"resource"},"C_Cpp.formatting":{"type":"string","enum":["Default","Disabled"],"default":"Default","description":"\"Default\" enables code formatting. \"Disabled\" disables code formatting.","scope":"resource"},"C_Cpp.loggingLevel":{"type":"string","enum":["None","Error","Warning","Information","Debug"],"default":"Error","description":"The verbosity of logging in the Output Panel. The order of levels from least verbose to most verbose is: None < Error < Warning < Information < Debug.","scope":"resource"},"C_Cpp.autoAddFileAssociations":{"type":"boolean","default":true,"description":"Controls whether files are automatically added to files.associations when they are the target of a navigation operation from a C/C++ file.","scope":"resource"},"C_Cpp.workspaceParsingPriority":{"type":"string","enum":["highest","high","medium","low"],"default":"highest","description":"Controls whether parsing of the non-active workspace files uses sleeps to avoid using 100% CPU. The values highest/high/medium/low correspond to approximately 100/75/50/25% CPU usage.","scope":"resource"},"C_Cpp.workspaceSymbols":{"type":"string","enum":["All","Just My Code"],"default":"Just My Code","description":"The symbols to include in the query results when 'Go to Symbol in Workspace' is invoked","scope":"resource"},"C_Cpp.exclusionPolicy":{"type":"string","enum":["checkFolders","checkFilesAndFolders"],"default":"checkFolders","description":"Instructs the extension when to use the \"files.exclude\" setting when determining which files should be added to the code navigation database while traversing through the paths in the \"browse.path\" array. \"checkFolders\" means that the exclusion filters will only be evaluated once per folder (individual files are not checked). \"checkFilesAndFolders\" means that the exclusion filters will be evaluated against every file and folder encountered. If your \"files.exclude\" setting only contains folders, then \"checkFolders\" is the best choice and will increase the speed at which the extension can initialize the code navigation database.","scope":"resource"},"C_Cpp.preferredPathSeparator":{"type":"string","enum":["Forward Slash","Backslash"],"default":"Forward Slash","description":"The character used as a path separator for #include auto-completion results.","scope":"resource"},"C_Cpp.commentContinuationPatterns":{"type":"array","default":["/**"],"items":{"anyOf":[{"type":"string","description":"The pattern that begins a multiline or single line comment block. The continuation pattern defaults to ' * ' for multiline comment blocks or this string for single line comment blocks."},{"type":"object","properties":{"begin":{"type":"string","description":"The pattern that begins a multiline or single line comment block."},"continue":{"type":"string","description":"The text that will be inserted on the next line when Enter is pressed inside a multiline or single line comment block."}}}]},"description":"Defines the editor behavior for when the Enter key is pressed inside a multiline or single line comment block.","scope":"resource"},"C_Cpp.configurationWarnings":{"type":"string","enum":["Enabled","Disabled"],"default":"Enabled","description":"Determines whether pop up notifications will be shown when a configuration provider extension is unable to provide a configuration for a source file.","scope":"resource"},"C_Cpp.intelliSenseCachePath":{"type":"string","default":null,"description":"Defines the folder path for cached precompiled headers used by IntelliSense. The default cache path is \"%LocalAppData%/Microsoft/vscode-cpptools\" on Windows, \"$XDG_CACHE_HOME/vscode-cpptools/\" on Linux (or \"~/.cache/vscode-cpptools/\" if XDG_CACHE_HOME is not defined), and \"~/Library/Caches/vscode-cpptools/\" on Mac. The default path will be used if no path is specified or if a specified path is invalid.","scope":"resource"},"C_Cpp.intelliSenseCacheSize":{"type":"number","default":5120,"description":"Maximum size of the per-workspace hard drive space in megabytes for cached precompiled headers; the actual usage may fluctuate around this value. The default size is 5120 MB. Precompiled header caching is disabled when the size is 0.","scope":"resource","minimum":0},"C_Cpp.default.includePath":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"The value to use in a configuration if \"includePath\" is not specified, or the values to insert if \"${default}\" is present in \"includePath\".","scope":"resource"},"C_Cpp.default.defines":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"The value to use in a configuration if \"defines\" is not specified, or the values to insert if \"${default}\" is present in \"defines\".","scope":"resource"},"C_Cpp.default.macFrameworkPath":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"The value to use in a configuration if \"macFrameworkPath\" is not specified, or the values to insert if \"${default}\" is present in \"macFrameworkPath\".","scope":"resource"},"C_Cpp.default.windowsSdkVersion":{"type":["string","null"],"default":null,"description":"Version of the Windows SDK include path to use on Windows, e.g. '10.0.17134.0'.","pattern":"^\\d{2}\\.\\d{1}\\.\\d{5}\\.\\d{1}$|^8\\.1$","scope":"resource"},"C_Cpp.default.compileCommands":{"type":["string","null"],"default":null,"description":"The value to use in a configuration if \"compileCommands\" is either not specified, or set to \"${default}\".","scope":"resource"},"C_Cpp.default.forcedInclude":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"The value to use in a configuration if \"forcedInclude\" is not specified, or the values to insert if \"${default}\" is present in \"forcedInclude\".","scope":"resource"},"C_Cpp.default.intelliSenseMode":{"type":["string","null"],"enum":["msvc-x64","gcc-x64","clang-x64","msvc-x86","gcc-x86","clang-x86"],"default":null,"description":"The value to use in a configuration if \"intelliSenseMode\" is either not specified or set to \"${default}\".","scope":"resource"},"C_Cpp.default.compilerPath":{"type":["string","null"],"default":null,"description":"The value to use in a configuration if \"compilerPath\" is either not specified or set to \"${default}\".","scope":"resource"},"C_Cpp.default.compilerArgs":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"The value to use in configuration if \"compilerArgs\" is either not specified or set to \"${default}\".","scope":"resource"},"C_Cpp.default.cStandard":{"type":["string","null"],"enum":["c89","c99","c11"],"default":null,"description":"The value to use in a configuration if \"cStandard\" is either not specified or set to \"${default}\".","scope":"resource"},"C_Cpp.default.cppStandard":{"type":["string","null"],"enum":["c++98","c++03","c++11","c++14","c++17","c++20"],"default":null,"description":"The value to use in a configuration if \"cppStandard\" is either not specified or set to \"${default}\".","scope":"resource"},"C_Cpp.default.configurationProvider":{"type":["string","null"],"default":null,"description":"The value to use in a configuration if \"configurationProvider\" is either not specified or set to \"${default}\".","scope":"resource"},"C_Cpp.default.browse.path":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"The value to use in a configuration if \"browse.path\" is not specified, or the values to insert if \"${default}\" is present in \"browse.path\".","scope":"resource"},"C_Cpp.default.browse.databaseFilename":{"type":["string","null"],"default":null,"description":"The value to use in a configuration if \"browse.databaseFilename\" is either not specified or set to \"${default}\".","scope":"resource"},"C_Cpp.default.browse.limitSymbolsToIncludedHeaders":{"type":"boolean","default":true,"description":"The value to use in a configuration if \"browse.limitSymbolsToIncludedHeaders\" is either not specified or set to \"${default}\".","scope":"resource"},"C_Cpp.default.systemIncludePath":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"The value to use for the system include path. If set, it overrides the system include path acquired via \"compilerPath\" and \"compileCommands\" settings.","scope":"resource"},"C_Cpp.default.enableConfigurationSquiggles":{"type":["boolean","null"],"default":null,"description":"Controls whether the extension will report errors detected in c_cpp_properties.json.","scope":"resource"},"C_Cpp.updateChannel":{"type":"string","enum":["Default","Insiders"],"default":"Insiders","description":"Set to \"Insiders\" to automatically download and install the latest Insiders builds of the extension, which include upcoming features and bug fixes.","scope":"resource"},"C_Cpp.experimentalFeatures":{"type":"string","enum":["Enabled","Disabled"],"default":"Disabled","description":"Controls whether \"experimental\" features are usable.","scope":"resource"},"C_Cpp.suggestSnippets":{"type":"boolean","default":true,"description":"If true, snippets are provided by the language server.","scope":"resource"},"C_Cpp.enhancedColorization":{"type":"string","enum":["Enabled","Disabled"],"default":"Enabled","description":"If enabled, code is colorized based on IntelliSense. This setting has no effect if IntelliSense is disabled or if using the Default High Contrast theme.","scope":"resource"},"C_Cpp.vcpkg.enabled":{"type":"boolean","default":true,"markdownDescription":"Enable integration services for the [vcpkg dependency manager](https://aka.ms/vcpkg/).","scope":"resource"},"C_Cpp.renameRequiresIdentifier":{"type":"boolean","default":true,"description":"If true, 'Rename Symbol' will require a valid C/C++ identifier.","scope":"application"}}},"commands":[{"command":"C_Cpp.ConfigurationSelect","title":"Select a Configuration...","category":"C/C++"},{"command":"C_Cpp.ConfigurationProviderSelect","title":"Change Configuration Provider...","category":"C/C++"},{"command":"C_Cpp.ConfigurationEditJSON","title":"Edit Configurations (JSON)","category":"C/C++"},{"command":"C_Cpp.ConfigurationEditUI","title":"Edit Configurations (UI)","category":"C/C++"},{"command":"C_Cpp.SwitchHeaderSource","title":"Switch Header/Source","category":"C/C++"},{"command":"C_Cpp.EnableErrorSquiggles","title":"Enable Error Squiggles","category":"C/C++"},{"command":"C_Cpp.DisableErrorSquiggles","title":"Disable Error Squiggles","category":"C/C++"},{"command":"C_Cpp.ToggleIncludeFallback","title":"Toggle IntelliSense Engine Fallback on Include Errors","category":"C/C++"},{"command":"C_Cpp.ToggleDimInactiveRegions","title":"Toggle Inactive Region Colorization","category":"C/C++"},{"command":"C_Cpp.ResetDatabase","title":"Reset IntelliSense Database","category":"C/C++"},{"command":"C_Cpp.TakeSurvey","title":"Take Survey","category":"C/C++"},{"command":"C_Cpp.BuildAndDebugActiveFile","title":"Build and Debug Active File","category":"C/C++"},{"command":"C_Cpp.LogDiagnostics","title":"Log Diagnostics","category":"C/C++"},{"command":"C_Cpp.RescanWorkspace","title":"Rescan Workspace","category":"C/C++"},{"command":"C_Cpp.VcpkgClipboardInstallSuggested","title":"Copy vcpkg install command to clipboard","category":"C/C++"},{"command":"C_Cpp.VcpkgOnlineHelpSuggested","title":"Visit the vcpkg help page","category":"C/C++"},{"command":"CppRenameView.remove","category":"C/C++","title":"Remove Reference","icon":{"light":"assets/minus-light.svg","dark":"assets/minus-dark.svg"}},{"command":"CppRenameView.add","category":"C/C++","title":"Add Reference","icon":{"light":"assets/plus-light.svg","dark":"assets/plus-dark.svg"}},{"command":"CppRenameView.removeAll","category":"C/C++","title":"Remove All References","icon":{"light":"assets/minus-light.svg","dark":"assets/minus-dark.svg"}},{"command":"CppRenameView.addAll","category":"C/C++","title":"Add All References","icon":{"light":"assets/plus-light.svg","dark":"assets/plus-dark.svg"}},{"command":"CppRenameView.removeFile","category":"C/C++","title":"Remove References in File","icon":{"light":"assets/minus-light.svg","dark":"assets/minus-dark.svg"}},{"command":"CppRenameView.addFile","category":"C/C++","title":"Add References in File","icon":{"light":"assets/plus-light.svg","dark":"assets/plus-dark.svg"}},{"command":"CppRenameView.addReferenceType","category":"C/C++","title":"Add References of Type","icon":{"light":"assets/plus-light.svg","dark":"assets/plus-dark.svg"}},{"command":"CppRenameView.cancel","category":"C/C++","title":"Cancel Rename","icon":{"light":"assets/cancel-light.svg","dark":"assets/cancel-dark.svg"}},{"command":"CppRenameView.done","category":"C/C++","title":"Commit Rename","icon":{"light":"assets/check-light.svg","dark":"assets/check-dark.svg"}},{"command":"C_Cpp.referencesViewGroupByType","category":"C/C++","title":"Group by Reference Type","icon":{"light":"assets/ref-group-by-type-light.svg","dark":"assets/ref-group-by-type-dark.svg"}},{"command":"C_Cpp.referencesViewUngroupByType","category":"C/C++","title":"Ungroup by Reference Type","icon":{"light":"assets/ref-ungroup-by-type-light.svg","dark":"assets/ref-ungroup-by-type-dark.svg"}}],"keybindings":[{"command":"C_Cpp.SwitchHeaderSource","key":"Alt+O","when":"editorTextFocus && editorLangId == 'cpp'"},{"command":"C_Cpp.SwitchHeaderSource","key":"Alt+O","when":"editorTextFocus && editorLangId == 'c'"}],"debuggers":[{"type":"cppdbg","label":"C++ (GDB/LLDB)","variables":{"pickProcess":"extension.pickNativeProcess","pickRemoteProcess":"extension.pickRemoteNativeProcess"},"configurationAttributes":{"launch":{"type":"object","default":{},"required":["program"],"properties":{"program":{"type":"string","description":"Full path to program executable.","default":"${workspaceRoot}/a.out"},"args":{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},"type":{"type":"string","description":"The type of the engine. Must be \"cppdbg\".","default":"cppdbg"},"targetArchitecture":{"type":"string","description":"The architecture of the debuggee. This will automatically be detected unless this parameter is set. Allowed values are x86, arm, arm64, mips, x64, amd64, x86_64.","default":"x64"},"cwd":{"type":"string","description":"The working directory of the target","default":"."},"setupCommands":{"type":"array","description":"One or more GDB/LLDB commands to execute in order to setup the underlying debugger. Example: \"setupCommands\": [ { \"text\": \"-enable-pretty-printing\", \"description\": \"Enable GDB pretty printing\", \"ignoreFailures\": true }].","items":{"type":"object","default":{},"properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[]},"customLaunchSetupCommands":{"type":"array","description":"If provided, this replaces the default commands used to launch a target with some other commands. For example, this can be \"-target-attach\" in order to attach to a target process. An empty command list replaces the launch commands with nothing, which can be useful if the debugger is being provided launch options as command line options. Example: \"customLaunchSetupCommands\": [ { \"text\": \"target-run\", \"description\": \"run target\", \"ignoreFailures\": false }].","items":{"type":"object","default":{},"properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[]},"launchCompleteCommand":{"enum":["exec-run","exec-continue","None"],"description":"The command to execute after the debugger is fully setup in order to cause the target process to run. Allowed values are \"exec-run\", \"exec-continue\", \"None\". The default value is \"exec-run\".","default":"exec-run"},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process. This option is not compatible with GDB pretty printing. Please also see \"showDisplayString\" if using this setting.","default":""},"showDisplayString":{"type":"boolean","description":"When a visualizerFile is specified, showDisplayString will enable the display string. Turning this option on can cause slower performance during debugging.","default":true},"environment":{"type":"array","description":"Environment variables to add to the environment for the program. Example: [ { \"name\": \"squid\", \"value\": \"clam\" } ].","items":{"type":"object","default":{},"properties":{"name":{"type":"string"},"value":{"type":"string"}}},"default":[]},"envFile":{"type":"string","description":"Absolute path to a file containing environment variable definitions. This file has key value pairs separated by an equals sign per line. E.g. KEY=VALUE","default":"${workspaceFolder}/.env"},"additionalSOLibSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for .so files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"MIMode":{"type":"string","description":"Indicates the console debugger that the MIDebugEngine will connect to. Allowed values are \"gdb\" \"lldb\".","default":"gdb"},"miDebuggerPath":{"type":"string","description":"The path to the MI debugger (such as gdb). When unspecified, it will search path first for the debugger.","default":"/usr/bin/gdb"},"miDebuggerArgs":{"type":"string","description":"Additional arguments for the MI debugger (such as gdb).","default":""},"miDebuggerServerAddress":{"type":"string","description":"Network address of the MI Debugger Server to connect to (example: localhost:1234).","default":"serveraddress:port"},"stopAtEntry":{"type":"boolean","description":"Optional parameter. If true, the debugger should stop at the entrypoint of the target. If processId is passed, has no effect.","default":false},"debugServerPath":{"type":"string","description":"Optional full path to debug server to launch. Defaults to null.","default":""},"debugServerArgs":{"type":"string","description":"Optional debug server args. Defaults to null.","default":""},"serverStarted":{"type":"string","description":"Optional server-started pattern to look for in the debug server output. Defaults to null.","default":""},"filterStdout":{"type":"boolean","description":"Search stdout stream for server-started pattern and log stdout to debug output. Defaults to true.","default":true},"filterStderr":{"type":"boolean","description":"Search stderr stream for server-started pattern and log stderr to debug output. Defaults to false.","default":false},"serverLaunchTimeout":{"type":"integer","description":"Optional time, in milliseconds, for the debugger to wait for the debugServer to start up. Default is 10000.","default":"10000"},"coreDumpPath":{"type":"string","description":"Optional full path to a core dump file for the specified program. Defaults to null.","default":""},"externalConsole":{"type":"boolean","description":"If true, a console is launched for the debuggee. If false, on Linux and Windows, it will appear in the Integrated Console.","default":false},"avoidWindowsConsoleRedirection":{"type":"boolean","description":"If true, disables debuggee console redirection that is required for Integrated Terminal support.","default":false},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"}},"logging":{"description":"Optional flags to determine what types of messages should be logged to the Debug Console.","type":"object","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic debug engine messages should be logged to the Debug Console. Defaults to false.","default":false},"trace":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command tracing should be logged to the Debug Console. Defaults to false.","default":false},"traceResponse":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command and response tracing should be logged to the Debug Console. Defaults to false.","default":false}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the MI-enabled debugger backend executable (such as gdb).","type":"object","default":{"pipeCwd":"/usr/bin","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[],"debuggerPath":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"/usr/bin"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"type":"array","description":"Command line arguments passed to the pipe program to configure the connection.","items":{"type":"string"},"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine, for example /usr/bin/gdb.","default":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"symbolLoadInfo":{"description":"Explicit control of symbol loading.","type":"object","default":{"loadAll":true,"exceptionList":""},"properties":{"loadAll":{"type":"boolean","description":"If true, symbols for all libs will be loaded, otherwise no solib symbols will be loaded. Default value is true.","default":true},"exceptionList":{"type":"string","description":"List of filenames (wildcards allowed) separated by semicolons ';'. Modifies behavior of LoadAll. If LoadAll is true then don't load symbols for libs that match any name in the list. Otherwise only load symbols for libs that match. Example: \"foo.so;bar.so\"","default":""}}}}},"attach":{"type":"object","default":{},"required":["program","processId"],"properties":{"program":{"type":"string","description":"Full path to program executable.","default":"${workspaceRoot}/a.out"},"type":{"type":"string","description":"The type of the engine. Must be \"cppdbg\".","default":"cppdbg"},"targetArchitecture":{"type":"string","description":"The architecture of the debuggee. This will automatically be detected unless this parameter is set. Allowed values are x86, arm, arm64, mips, x64, amd64, x86_64.","default":"x64"},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process. This option is not compatible with GDB pretty printing. Please also see \"showDisplayString\" if using this setting.","default":""},"showDisplayString":{"type":"boolean","description":"When a visualizerFile is specified, showDisplayString will enable the display string. Turning this option on can cause slower performance during debugging.","default":true},"additionalSOLibSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for .so files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"MIMode":{"type":"string","description":"Indicates the console debugger that the MIDebugEngine will connect to. Allowed values are \"gdb\" \"lldb\".","default":"gdb"},"miDebuggerPath":{"type":"string","description":"The path to the MI debugger (such as gdb). When unspecified, it will search path first for the debugger.","default":"/usr/bin/gdb"},"miDebuggerServerAddress":{"type":"string","description":"Network address of the MI Debugger Server to connect to (example: localhost:1234).","default":"serveraddress:port"},"processId":{"anyOf":[{"type":"string","description":"Optional process id to attach the debugger to. Use \"${command:pickProcess}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":"${command:pickProcess}"},{"type":"integer","description":"Optional process id to attach the debugger to. Use \"${command:pickProcess}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":0}]},"filterStdout":{"type":"boolean","description":"Search stdout stream for server-started pattern and log stdout to debug output. Defaults to true.","default":true},"filterStderr":{"type":"boolean","description":"Search stderr stream for server-started pattern and log stderr to debug output. Defaults to false.","default":false},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"}},"logging":{"description":"Optional flags to determine what types of messages should be logged to the Debug Console.","type":"object","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic debug engine messages should be logged to the Debug Console. Defaults to false.","default":false},"trace":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command tracing should be logged to the Debug Console. Defaults to false.","default":false},"traceResponse":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command and response tracing should be logged to the Debug Console. Defaults to false.","default":false}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the MI-enabled debugger backend executable (such as gdb).","type":"object","default":{"pipeCwd":"/usr/bin","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[],"debuggerPath":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"/usr/bin"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"type":"array","description":"Command line arguments passed to the pipe program to configure the connection.","items":{"type":"string"},"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine, for example /usr/bin/gdb.","default":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"setupCommands":{"type":"array","description":"One or more GDB/LLDB commands to execute in order to setup the underlying debugger. Example: \"setupCommands\": [ { \"text\": \"-enable-pretty-printing\", \"description\": \"Enable GDB pretty printing\", \"ignoreFailures\": true }].","items":{"type":"object","default":{},"properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[]},"symbolLoadInfo":{"description":"Explicit control of symbol loading.","type":"object","default":{"loadAll":true,"exceptionList":""},"properties":{"loadAll":{"type":"boolean","description":"If true, symbols for all libs will be loaded, otherwise no solib symbols will be loaded. Default value is true.","default":true},"exceptionList":{"type":"string","description":"List of filenames (wildcards allowed) separated by semicolons ';'. Modifies behavior of LoadAll. If LoadAll is true then don't load symbols for libs that match any name in the list. Otherwise only load symbols for libs that match. Example: \"foo.so;bar.so\"","default":""}}}}}}},{"type":"cppvsdbg","label":"C++ (Windows)","variables":{"pickProcess":"extension.pickNativeProcess"},"configurationAttributes":{"launch":{"type":"object","default":{},"required":["program","cwd"],"properties":{"program":{"type":"string","description":"Full path to program executable.","default":"${workspaceRoot}/program.exe"},"args":{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},"type":{"type":"string","description":"The type of the engine. Must be \"cppvsdbg\".","default":"cppvsdbg"},"cwd":{"type":"string","description":"The working directory of the target","default":"${workspaceRoot}"},"environment":{"type":"array","description":"Environment variables to add to the environment for the program. Example: [ { \"name\": \"squid\", \"value\": \"clam\" } ].","items":{"type":"object","default":{},"properties":{"name":{"type":"string"},"value":{"type":"string"}}},"default":[]},"envFile":{"type":"string","description":"Absolute path to a file containing environment variable definitions. This file has key value pairs separated by an equals sign per line. E.g. KEY=VALUE","default":"${workspaceFolder}/.env"},"symbolSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for symbol (that is, pdb) files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"stopAtEntry":{"type":"boolean","description":"Optional parameter. If true, the debugger should stop at the entrypoint of the target. If processId is passed, has no effect.","default":false},"dumpPath":{"type":"string","description":"Optional full path to a dump file for the specified program. Example: \"c:\\temp\\app.dmp\". Defaults to null.","default":""},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process.","default":""},"externalConsole":{"type":"boolean","description":"If true, a console is launched for the debuggee. If false, no console is launched.","default":false},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"}},"enableDebugHeap":{"type":"boolean","description":"If false, the process will be launched with debug heap disabled. This sets the environment variable '_NO_DEBUG_HEAP' to '1'.","default":false},"logging":{"type":"object","description":"Optional flags to determine what types of messages should be logged to the Debug Console.","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic debug engine messages should be logged to the Debug Console. Defaults to false.","default":false}}},"requireExactSource":{"type":"boolean","description":"Optional flag to require current source code to match the pdb.","default":true}}},"attach":{"type":"object","default":{},"required":["processId"],"properties":{"type":{"type":"string","description":"The type of the engine. Must be \"cppvsdbg\".","default":"cppvsdbg"},"symbolSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for symbol (that is, pdb) files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"processId":{"anyOf":[{"type":"string","description":"Optional process id to attach the debugger to. Use \"${command:pickProcess}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":"${command:pickProcess}"},{"type":"integer","description":"Optional process id to attach the debugger to. Use \"${command:pickProcess}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":0}]},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process.","default":""},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"}},"logging":{"type":"object","description":"Optional flags to determine what types of messages should be logged to the Debug Console.","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"trace":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command tracing should be logged to the Debug Console. Defaults to false.","default":false}}},"requireExactSource":{"type":"boolean","description":"Optional flag to require current source code to match the pdb.","default":true}}}}}],"breakpoints":[{"language":"c"},{"language":"cpp"},{"language":"cuda"}],"jsonValidation":[{"fileMatch":"c_cpp_properties.json","url":"cpptools-schema:///c_cpp_properties.schema.json"}],"menus":{"view/title":[{"command":"C_Cpp.referencesViewGroupByType","when":"view == CppReferencesView && refView.isGroupedByFile","group":"navigation"},{"command":"C_Cpp.referencesViewUngroupByType","when":"view == CppReferencesView && !refView.isGroupedByFile","group":"navigation"},{"command":"C_Cpp.referencesViewGroupByType","when":"view == CppRenameCandidatesView && refView.isGroupedByFile","group":"navigation@1"},{"command":"C_Cpp.referencesViewUngroupByType","when":"view == CppRenameCandidatesView && !refView.isGroupedByFile","group":"navigation@1"},{"command":"CppRenameView.removeAll","when":"view == CppRenamePendingView && cppRename:hasResults","group":"navigation@1"},{"command":"CppRenameView.done","when":"view == CppRenamePendingView && cppRename:hasResults","group":"navigation@2"},{"command":"CppRenameView.cancel","when":"view == CppRenamePendingView && cppRename:hasResults","group":"navigation@3"},{"command":"CppRenameView.addAll","when":"view == CppRenameCandidatesView && cppRename:hasResults","group":"navigation@2"}],"view/item/context":[{"command":"CppRenameView.remove","when":"view == CppRenamePendingView && viewItem == pendingItem","group":"inline"},{"command":"CppRenameView.add","when":"view == CppRenameCandidatesView && viewItem == candidateItem","group":"inline"},{"command":"CppRenameView.removeFile","when":"view == CppRenamePendingView && viewItem == pendingFile","group":"inline"},{"command":"CppRenameView.addFile","when":"view == CppRenameCandidatesView && viewItem == candidateFile","group":"inline"},{"command":"CppRenameView.addReferenceType","when":"view == CppRenameCandidatesView && viewItem == candidateReferenceType","group":"inline"}],"editor/context":[{"when":"editorLangId == c","command":"C_Cpp.SwitchHeaderSource","group":"other1_navigation@1"},{"when":"editorLangId == cpp","command":"C_Cpp.SwitchHeaderSource","group":"other1_navigation@1"},{"when":"editorLangId == c","command":"workbench.action.gotoSymbol","group":"other1_navigation@3"},{"when":"editorLangId == cpp","command":"workbench.action.gotoSymbol","group":"other1_navigation@3"},{"when":"editorLangId == c","command":"workbench.action.showAllSymbols","group":"other1_navigation@4"},{"when":"editorLangId == cpp","command":"workbench.action.showAllSymbols","group":"other1_navigation@4"},{"when":"editorLangId == cpp","command":"C_Cpp.BuildAndDebugActiveFile","group":"other2_debug@1"},{"when":"editorLangId == c","command":"C_Cpp.BuildAndDebugActiveFile","group":"other2_debug@1"}],"commandPalette":[{"command":"CppRenameView.remove","when":"never"},{"command":"CppRenameView.add","when":"never"},{"command":"CppRenameView.removeAll","when":"cppRename:hasResults"},{"command":"CppRenameView.addAll","when":"cppRename:hasResults"},{"command":"CppRenameView.removeFile","when":"never"},{"command":"CppRenameView.addFile","when":"never"},{"command":"CppRenameView.addReferenceType","when":"never"},{"command":"CppRenameView.cancel","when":"cppRename:hasResults"},{"command":"CppRenameView.done","when":"cppRename:hasResults"},{"command":"C_Cpp.referencesViewGroupByType","when":"cppRename:hasResults || cppReferenceTypes:hasResults"},{"command":"C_Cpp.referencesViewUngroupByType","when":"cppRename:hasResults || cppReferenceTypes:hasResults"}]},"configurationDefaults":{"[cpp]":{"editor.wordBasedSuggestions":false},"[c]":{"editor.wordBasedSuggestions":false},"[Log]":{"editor.wordWrap":"off"}}},"scripts":{"vscode:prepublish":"yarn run compile","compile":"node ./tools/prepublish.js && gulp generate-native-strings && gulp translations-generate && webpack --mode production --vscode-nls","compile-dev":"node ./tools/prepublish.js && gulp generate-native-strings && webpack --mode development","compile-watch":"node ./tools/prepublish.js && gulp generate-native-strings && gulp translations-generate && webpack --mode production --vscode-nls --watch --info-verbosity verbose","compile-dev-watch":"node ./tools/prepublish.js && gulp generate-native-strings && webpack --mode development --watch --info-verbosity verbose","generateOptionsSchema":"node ./tools/prepublish.js && node ./out/tools/generateOptionsSchema.js","generate-native-strings":"node ./tools/prepublish.js && gulp generate-native-strings","translations-export":"node ./tools/prepublish.js && gulp generate-native-strings && gulp translations-export","translations-generate":"node ./tools/prepublish.js && gulp translations-generate","translations-import":"node ./tools/prepublish.js && gulp translations-import","postinstall":"node ./node_modules/vscode/bin/install","prepublishjs":"node ./tools/prepublish.js","pretest":"node ./tools/prepublish.js && tsc -p test.tsconfig.json","pr-check":"node ./tools/prepublish.js && gulp pr-check","tslint":"node ./tools/prepublish.js && gulp tslint","unitTests":"node ./tools/prepublish.js && gulp unitTests","import-edge-strings":"node ./import_edge_strings.js"},"devDependencies":{"@octokit/rest":"^16.28.9","@types/minimatch":"^3.0.3","@types/mkdirp":"^0.5.2","@types/mocha":"^5.2.7","@types/node":"^12.7.2","@types/plist":"^3.0.2","@types/tmp":"^0.1.0","@types/webpack":"^4.39.0","@types/yauzl":"^2.9.1","async-child-process":"^1.1.1","await-notify":"^1.0.1","event-stream":"^4.0.1","fs-extra":"^8.1.0","gulp":"^4.0.2","gulp-env":"^0.4.0","gulp-filter":"^6.0.0","gulp-mocha":"^7.0.1","gulp-sourcemaps":"^2.6.5","gulp-tslint":"^8.1.4","gulp-typescript":"^5.0.1","minimist":"^1.2.0","parse5":"^5.1.0","parse5-traverse":"^1.0.3","ts-loader":"^6.0.4","tslint":"^5.19.0","tslint-microsoft-contrib":"^6.2.0","tslint-no-unused-expression-chai":"^0.1.4","typescript":"^3.5.3","vrsource-tslint-rules":"^6.0.0","vscode":"^1.1.36","vscode-nls-dev":"^3.2.6","webpack":"^4.39.2","webpack-cli":"^3.3.7","xml2js":"^0.4.19"},"dependencies":{"escape-string-regexp":"^2.0.0","http-proxy-agent":"^2.1.0","https-proxy-agent":"^2.2.4","jsonc-parser":"^2.1.1","minimatch":"^3.0.4","mkdirp":"^0.5.1","plist":"^3.0.1","tmp":"^0.1.0","vscode-cpptools":"^3.1.0","vscode-debugadapter":"^1.35.0","vscode-debugprotocol":"^1.35.0","vscode-extension-telemetry":"^0.1.2","vscode-languageclient":"^5.2.1","vscode-nls":"^4.1.1","which":"^2.0.2","yauzl":"^2.10.0"},"resolutions":{"https-proxy-agent":"^2.2.4"},"runtimeDependencies":[{"description":"C/C++ language components (Linux / x86_64)","url":"https://go.microsoft.com/fwlink/?linkid=2112727","platforms":["linux"],"architectures":["x86_64"],"binaries":["./bin/Microsoft.VSCode.CPP.Extension.linux","./bin/Microsoft.VSCode.CPP.IntelliSense.Msvc.linux"]},{"description":"C/C++ language components (Linux / x86)","url":"https://go.microsoft.com/fwlink/?linkid=2112728","platforms":["linux"],"architectures":["x86","i686","i386"],"binaries":["./bin/Microsoft.VSCode.CPP.Extension.linux","./bin/Microsoft.VSCode.CPP.IntelliSense.Msvc.linux"]},{"description":"C/C++ language components (OS X)","url":"https://go.microsoft.com/fwlink/?linkid=2112725","platforms":["darwin"],"binaries":["./bin/Microsoft.VSCode.CPP.Extension.darwin","./bin/Microsoft.VSCode.CPP.IntelliSense.Msvc.darwin"]},{"description":"C/C++ language components (Windows)","url":"https://go.microsoft.com/fwlink/?linkid=2112726","platforms":["win32"],"binaries":[]},{"description":"ClangFormat (Linux / x86_64)","url":"https://go.microsoft.com/fwlink/?LinkID=872607","platforms":["linux"],"architectures":["x86_64"],"binaries":["./LLVM/bin/clang-format"]},{"description":"ClangFormat (Linux / x86)","url":"https://go.microsoft.com/fwlink/?LinkID=872608","platforms":["linux"],"architectures":["x86","i686","i386"],"binaries":["./LLVM/bin/clang-format"]},{"description":"ClangFormat (OS X)","url":"https://go.microsoft.com/fwlink/?LinkID=872609","platforms":["darwin"],"binaries":["./LLVM/bin/clang-format.darwin"]},{"description":"ClangFormat (Windows)","url":"https://go.microsoft.com/fwlink/?LinkID=872610","platforms":["win32"],"binaries":[]},{"description":"Mono Framework Assemblies","url":"https://go.microsoft.com/fwlink/?LinkId=2027135","platforms":["linux","darwin"],"binaries":[]},{"description":"Mono Runtime (Linux / x86)","url":"https://go.microsoft.com/fwlink/?LinkId=2027410","platforms":["linux"],"architectures":["x86","i686","i386"],"binaries":["./debugAdapters/mono.linux-x86"]},{"description":"Mono Runtime (Linux / x86_64)","url":"https://go.microsoft.com/fwlink/?LinkId=2027416","platforms":["linux"],"architectures":["x86_64"],"binaries":["./debugAdapters/mono.linux-x86_64"]},{"description":"Mono Runtime (OS X)","url":"https://go.microsoft.com/fwlink/?LinkId=2027403","platforms":["darwin"],"binaries":["./debugAdapters/mono.osx"]},{"description":"LLDB 3.8.0 (OS X)","url":"https://go.microsoft.com/fwlink/?LinkID=817244","platforms":["darwin"],"binaries":["./debugAdapters/lldb/bin/debugserver","./debugAdapters/lldb/bin/lldb-mi","./debugAdapters/lldb/bin/lldb-argdumper","./debugAdapters/lldb/bin/lldb-launcher"]},{"description":"Visual Studio Windows Debugger","url":"https://go.microsoft.com/fwlink/?linkid=2082216","platforms":["win32"],"binaries":[]}],"uuid":"690b692e-e8a9-493f-b802-8089d50ac1b2","isBuiltin":false,"isUnderDevelopment":false,"id":"ms-vscode.cpptools","identifier":{"value":"ms-vscode.cpptools","_lower":"ms-vscode.cpptools"},"extensionLocation":{"$mid":1,"fsPath":"/home/user/.vscode-insiders/extensions/ms-vscode.cpptools-0.26.3","path":"/home/user/.vscode-insiders/extensions/ms-vscode.cpptools-0.26.3","scheme":"file"}},{"name":"haskelly","displayName":"Haskelly","description":"Complete support for casual and expert Haskell development.","version":"0.5.5","icon":"resources/icon.png","publisher":"UCL","repository":{"type":"git","url":"https://github.com/haskelly-dev/Haskelly"},"bugs":{"url":"https://github.com/haskelly-dev/Haskelly/issues"},"galleryBanner":{"color":"#8F4D8B","theme":"dark"},"engines":{"vscode":"^1.5.0"},"categories":["Languages","Snippets"],"keywords":["intero","haskell","highlight","snippets","stack"],"activationEvents":["onCommand:editor.runHaskell","onCommand:editor.runQuickCheck","onCommand:editor.ghci","onCommand:editor.stackTest","onCommand:editor.stackRun","onLanguage:haskell"],"main":"./out/src/extension","contributes":{"commands":[{"command":"editor.runHaskell","title":"Run File","category":"Haskell"},{"command":"editor.runQuickCheck","title":"QuickCheck","category":"Haskell"},{"command":"editor.ghci","title":"Load GHCi","category":"Haskell"},{"command":"editor.stackTest","title":"Stack Test","category":"Haskell"},{"command":"editor.stackBuild","title":"Stack Build","category":"Haskell"},{"command":"editor.stackRun","title":"Stack Run","category":"Haskell"}],"languages":[{"id":"haskell","aliases":["Haskell","haskell"],"extensions":[".hs",".lhs"],"configuration":"./languages/configurations/haskell.json"},{"id":"cabal","aliases":["Cabal","cabal"],"extensions":[".cabal"],"configuration":"./languages/configurations/cabal.json"}],"snippets":[{"language":"haskell","path":"./languages/snippets/haskell.json"}],"configuration":{"type":"object","title":"Haskelly configuration","properties":{"haskelly.codeCompletion":{"type":"boolean","default":true,"description":"Provide code completion."},"haskelly.buttons.ghci":{"type":"boolean","default":true,"description":"Show the GHCi button."},"haskelly.buttons.runFile":{"type":"boolean","default":true,"description":"Show the Run file button."},"haskelly.buttons.quickcheck":{"type":"boolean","default":true,"description":"Show the QuickCheck button."},"haskelly.buttons.stackRun":{"type":"boolean","default":true,"description":"Show the Stack run button."},"haskelly.buttons.stackRunParams":{"type":"string","default":"","description":"Additional parameters passed to stack run command."},"haskelly.buttons.stackBuild":{"type":"boolean","default":true,"description":"Show the Stack build button."},"haskelly.buttons.stackBuildParams":{"type":"string","default":"--fast","description":"Additional parameters passed to stack build command."},"haskelly.buttons.stackTest":{"type":"boolean","default":true,"description":"Show the Stack test button."},"haskelly.buttons.stackTestParams":{"type":"string","default":"","description":"Additional parameters passed to stack test command."},"haskelly.exec.reuseTerminal":{"type":"boolean","default":false,"description":"Haskelly will reuse the currently opened terminal to run Stack commands."},"haskelly.snippets.important":{"type":"boolean","default":false,"description":"Hide code completion suggestion if there's a snippet."},"haskelly.snippets.custom":{"type":"object","default":{},"description":"Add your custom snippets following the appropiate syntax."}}}},"scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install","test":"node ./node_modules/vscode/bin/test"},"devDependencies":{"@types/mocha":"^2.2.48","@types/node":"^6.0.109","mocha":"^2.3.3","typescript":"^2.8.3","vscode":"^1.1.17"},"extensionDependencies":["justusadam.language-haskell"],"dependencies":{"stream-splitter":"^0.3.2","uuid":"^3.2.1"},"uuid":"4f846889-2416-4974-93cc-20ffd528cd4e","isBuiltin":false,"isUnderDevelopment":false,"id":"UCL.haskelly","identifier":{"value":"UCL.haskelly","_lower":"ucl.haskelly"},"extensionLocation":{"$mid":1,"fsPath":"/home/user/.vscode-insiders/extensions/ucl.haskelly-0.5.5","path":"/home/user/.vscode-insiders/extensions/ucl.haskelly-0.5.5","scheme":"file"}}]}